<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<jaxb:bindings xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
               xmlns:hj="http://hyperjaxb3.jvnet.org/ejb/schemas/customizations"
               xmlns:orm="http://java.sun.com/xml/ns/persistence/orm"
               xmlns:annox="http://annox.dev.java.net"
               xs:schemaLocation="http://java.sun.com/xml/ns/jaxb 
                                  http://java.sun.com/xml/ns/jaxb/bindingschema_2_0.xsd"
               jaxb:extensionBindingPrefixes="hj orm annox"
               version="2.1">

    <jaxb:bindings schemaLocation="model_slaManagement.xsd" node="/xs:schema"> 
        <jaxb:schemaBindings>
            <jaxb:package name="org.tmf.dsmapi.sla.model"/> 
        </jaxb:schemaBindings> 

        <jaxb:globalBindings localScoping="toplevel">
            <!-- Unused by Hperjaxb3 : Just to avoid having to include dependency 
                 org.jvnet.hyperjaxb3:hyperjaxb3-ejb-runtime:{version}
            -->
            <xjc:javaType name="java.util.Date" xmlType="xs:dateTime"  
                                      adapter="org.tmf.dsmapi.commons.utils.CustomDateTimeAdapter" />
            <xjc:javaType name="java.util.Date" xmlType="xs:date"  
                                      adapter="org.tmf.dsmapi.commons.utils.CustomDateAdapter" />
            <!-- Add @XmlRootElement annotation and plurial names to Lists 
            <xjc:simple/>-->
            <!-- Make all class implement Serializable -->
            <jaxb:serializable uid="11" />         
        </jaxb:globalBindings>         
        <!-- Add JsonSerialize.Inclusion.NON_NULL annotation to all object -->
        <jaxb:bindings node="xs:complexType" multiple="true">
            <annox:annotate>
                @org.codehaus.jackson.map.annotate.JsonSerialize
                (include=org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion.NON_NULL)
            </annox:annotate>
        </jaxb:bindings>
        <!-- Add 'id' generation mode to main class (through hyperjaxb3) -->
                <jaxb:bindings node="xs:complexType[@name='Sla']//xs:element[@name='id']">
            <hj:id> 
                <orm:generated-value strategy="AUTO"/> 
            </hj:id>
        </jaxb:bindings>
                <jaxb:bindings node="xs:complexType[@name='SlaViolation']//xs:element[@name='id']">
            <hj:id> 
                <orm:generated-value strategy="AUTO"/> 
            </hj:id>
        </jaxb:bindings>
        
        <!-- Add @JsonIgnore to all elements named 'id' (as we are using autogenerated 
             Id by the database) to all getId(), excluding the main class   
        <jaxb:bindings node="xs:complexType[not(@name='${apiInterface.getClassName()}')]//xs:element[@name='id']" multiple="true">
            <annox:annotate target="getter">@org.codehaus.jackson.annotate.JsonIgnore</annox:annotate>
        </jaxb:bindings>-->

        <!-- Change hyperjaxb3 default generation strategies 
        <hj:persistence>-->
        <!-- Inheritance strategy generates a unique table (hyperjaxb3)
        <hj:default-entity>
            <orm:inheritance strategy="SINGLE_TABLE"/>
        </hj:default-entity>-->
        <!-- Default one to many generation strategy : use join table instead of
            join columns 
            <hj:default-one-to-many>
                <orm:join-table/>
            </hj:default-one-to-many>
        </hj:persistence> -->      
    </jaxb:bindings>

</jaxb:bindings>